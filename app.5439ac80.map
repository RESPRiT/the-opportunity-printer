{"version":3,"sources":["../node_modules/typed.js/lib/typed.js","js/stages.js","js/app.js"],"names":["ROLES","seeking","employing","checking","EMPLOYING_QUESTIONS","tech","text","input","lights","store","business","design","SEEKING_QUESTIONS","INTEREST_QUESTIONS","politics","finance","arts","PERSONALITY_QUESTIONS","city","animal","INTRODUCTION","role","RegExp","Object","values","join","subText","CHECKING","makeInbox","makeInboxConfirm","checkingVoicemail","leavingMessageListen","leavingMessageChoice","leavingMessageRecord","leavingMessageConfirm","leavingMessagePhone","notFound","noMessages","CONCLUSION","leavingMessage","ACTIONS","checkInbox","leaveMessageListen","leaveMessageRecord","EL","out","document","querySelector","outAlt","recording","playing","bar","barBackground","state","currAction","inboxes","messages","projectIDs","phoneNumbers","currID","tempAudio","beep","beepEnded","callback","addEventListener","chunks","type","log","strings","str","destroy","Typed","typeSpeed","loop","showCursor","logAlt","textContent","percentage","count","style","width","recordingLit","lit","classList","add","remove","playingLit","makeAudio","audio","Audio","src","audioFn","success","mediaRecorder","MediaRecorder","stream","start","play","stop","id","messageNum","leaveMessage","projectID","onstop","blob","Blob","audioSrc","window","URL","createObjectURL","console","ondataavailable","push","e","data","navigator","mediaDevices","getUserMedia","then","catch","err","currentStage","responses","altOverride","handleInput","keyName","currAudio","ended","match","handleSeeking","handleEmploying","handleChecking","length","slice","matches","i","Math","floor","random","reduce","prev","curr","keys","includes","retMatches","projectsOptions","counter","index","temp","currMessages","undefined","phones","obj","message","url","event","key"],"mappingsgCA;ADAO,IAAMA,wBAAQ;AACjBC,aAAS,GADQ;AAEjBC,eAAW,GAFM;ACCrB,ADEIC,cAAU;AAHO,CAAd;;AAMA,IAAMC,oDAAsB;ACMnC,ADLIC,UAAM;ACMV,ADLQC,ICKFkC,UAAU,ADLF,4GADJ;ACORZ,ADLMrB,aCKK,EDLE,OAFL,GCMM;AAEdkC,ADLMjC,cCKM,EDLE,GAHN,QCMM;AAGdkC,ADLMjC,eAAO,OCKO,sBAHN;AAIdkC,ADVQ,KADyB,iBCWb;AAJN,ADAZjC,CCAJ,aDAc;AACNJ,cAAM,+EADA;ACOd,ADLQC,eAAO,OAFD;ACQd,ADLQC,ICKFoC,KAAK,ODLK,GAHF;ACSZ,ADLMnC,eAAO;AAJD,KAPqB;AAa/BE,YAAQ;AACJL,cAAM,sEADF;AAEJC,eAAO,OAFH;AAGJC,gBAAQ,CAHJ;AAIJC,eAAO;ACMboC,ADVU,OCULC,SAASC,aAAT,CAAuB,MAAvB,CARI;AASTC,ADxBiC,CAA5B,SCwBGF,SAASC,aAAT,CAAuB,UAAvB,CATC;AAUTvC,UAAQsC,SAASC,aAAT,CAAuB,SAAvB,CAVC;AAWTE,ADLK,IAAMrC,SCKAkC,SAASC,aAAT,CAAuB,YAAvB,CAXF,GDMsB;ACM/BG,ADLE7C,UAAM,CCKCyC,SAASC,aAAT,CAAuB,UAAvB,CAZA;AAaTI,ADLM7C,OCKDwC,ODLO,ECKEC,aAAT,CAAuB,MAAvB,CAbI,yDDOD;ACORK,ADLM7C,eAAO,ECKEuC,KDPP,ICOgBC,aAAT,CAAuB,iBAAvB;AAdN,ADUHvC,CCVR,eDUgB,GAHN;AAIFC,eAAO;ACMf,ADVU,KADuB;ACYjC,ADLIC,ICKA2C,QAAQ,EDLE;ACMZC,ADLMhD,cCKM,ADLA,ICIF,+CDLE;AAENC,eAAO,OAFD;ACQZ,ADLMC,gBAAQ,GAHF;ACSZ+C,ADLM9C,WCKG,EAJC,EDDG;AAJD,KAPmB;ACkB/B,ADLEE,YAAQ;ACMV,ADLML,cAAM,0CADF;ACOVkD,ADLMjD,YCKI,EARA,CDGG,OAFH;AAGJC,gBAAQ,CAHJ;ACSV,ADLMC,eAAO;ACMbgD,ADVU,cCUE,EAXF;ADZqB,CAA1B;ACyBL;AACAC,ADLK,IAAM7C,YCKG,EAdJ,oCDSsB;AAC9BC,cAAU;ACMZ,ADLMR,cAAM,wDADA;ACOZqD,ADLMpD,UCKE,IAjBE,CDYG,OAFD;AAGNC,gBAAQ,IAHF;ACSZ,ADLMC,eAAO;ACMbmD,ADVY,KADoB,QCWrB;AApBD,ADgBR7C,CChBJ,YDgBa;AACLT,cAAM,0DADD;ACOb,ADLQC,eAAO,OAFF;ACQb,ADLQC,ICKFqD,OAAOf,KDLG,ICKMC,ADRT,aCQA,CAAuB,OAAvB,CAAb;ADJQtC,eAAO;ACMf,ADVa,ICUTqD,CDjB8B,WCiBlB,SAAZA,SAAY,CAACC,QAAD;AAAA,ADJZ/C,SCI0B6C,CDJpB,ICIyBG,gBAAL,CAAsB,OAAtB,EAA+BD,QAA/B,CAAd;AAAA,ADHRzD,CCGR,aDHc,kDADJ;AAEFC,eAAO,OAFL;ACMV,ADHQC,ICGJyD,SAAS,EAAb,CDHgB,CAHN;ACOV,ADHQxD,eAAO;AAJL;ACSV,ADtBkC,CAA3B,GCsBHyD,OAAO,IAAX;AACA,IAAIC,MAAM,SAANA,GAAM,MAAO;AACf,ADHK,IAAMlD,ECGPiD,QAAQA,KAAKE,OAAL,CAAa,CAAb,KAAmBC,GAA/B,EAAoC,sBDHD;AACjCnD,UAAM;ACIR,ADHMZ,MCGF4D,IAAJ,EAAU,EDHE,8KADJ;ACKNA,ADHI3D,SCGC+D,MDHM,CCGX,MDLM;ACMP,ADHK9D,gBAAQ,GAHN;AAIFC,eAAO;ACIbyD,ADRQ,KAD2B,ICS5B,IAAIK,eAAJ,CAAU3B,GAAGC,GAAb,EAAkB;AACvBuB,ADHAjD,YAAQ,CCGC,CAACkD,GAAD,CADc;AAEvBG,ADHIlE,cAAM,CCGC,EAFY,sFDFf;ACKRmE,ADHIlE,UCGE,KAHiB,ADAZ,OAFH;ACMRmE,ADHIlE,gBCGQ,ADHA,CAHJ;ACEe,ADEnBC,GCFC,CAAP,WDEa;ACId,ADRW,CCLZ;ADFqC,CAA9B;ACiBP,IAAIkE,SAAS,SAATA,MAAS,MAAO;AAClB,ADHK,IAAMvD,ECGP,CAACiD,GAAL,EAAUA,MAAM,EAAN,sBDHgB;ACI1BzB,ADHEvB,KCGC2B,KDHK,CCGR,CAAU4B,WAAV,GAAwBP,GAAxB;AACD,ADHO/D,CCAR,aDAc,uHADJ;AAEF;ACIR,ADHQC,eAAO,IAAIe,MAAJ,OAAeC,OAAOC,MAAP,CAAcxB,KAAd,EAAqByB,IAArB,CAA0B,EAA1B,CAAf,OAHL;AAIFjB,gBAAQ,CAJN;AAKFC,eAAO;AALL,KADkB;AAQxBP,eAAW;AACPI,cAAM,oEADC;AAEPoB,iBAAS,2BAFF;AAGPnB,eAAO,OAHA;AAIPC,gBAAQ,CAJD;AAKPC,eAAO;AALA,KARa;AAexBR,aAAS;AACLK,cAAM,oHADD;AAELoB,iBAAS,2BAFJ;AAGLnB,eAAO,OAHF;ACOb,ADHQC,gBAAQ,CAJH;ACQb,ADHQC,ICGJD,SAAS,EDHE,OCGXA,MAAS,QAAS;AACpB,ADTW,KAfe,CCwBtBqE,aAAaC,QAAQ,CAAR,GAAY,GAA7B;AACA,ADHE3E,MCGE0E,QDHQ,KCGK,CAAjB,EAAoBA,aAAa,CAAb;AACpBjC,ADHMtC,KCGH6C,GAAH,CAAO4B,KAAP,ADHY,CCGCC,KAAb,GAAqBH,aAAa,GAAlC,6DDJY;ACKZjC,ADHMrC,KCGH6C,UDHU,GCGb,CAAiB2B,KAAjB,CAAuBC,KAAvB,CDLY,ECKmB,MAAMH,UAAN,GAAmB,GAAlD;AACD,ADHOrE,CCFR,eDEgB,CAHF;AAINC,eAAO;ACIf,ADRc,ICQVwE,eAAe,SAAfA,YAAe,MAAO;AACxB,AD/B0B,CAArB,KC+BDC,GAAJ,EAAS;AACPtC,OAAGK,SAAH,CAAakC,SAAb,CAAuBC,GAAvB,CAA2B,OAA3B;AACD,ADHI,GCCL,CDDWzD,KCGJ,yBDHe;ACIpBiB,ADHAhB,OCGGqB,QDHQ,CCGX,CAAakC,SAAb,CAAuBE,MAAvB,CAA8B,OAA9B;AACD,ADHK/E,cAAM,+IADC;ACKd,ADHOC,CCHR,cDGe,OAFA;AAGPC,gBAAQ,GAHD;ACOf,ADHQC,ICGJ6E,WDHW,ECGE,SAAbA,UAAa,MAAO;AACtB,ADRa,KADS,CCSlBJ,GAAJ,EAAS;AACPtC,ADHAf,OCGGqB,OAAH,CAAWiC,ODHO,ECGlB,CAAqBC,GAArB,CAAyB,KAAzB;AACD,ADHK9E,GCCN,MAEO,KDHK,wHADQ;ACKlBsC,ADHIrC,OCGD2C,OAAH,CAAWiC,ADHA,SCGX,CAAqBE,EDLH,ICKlB,CAA4B,KAA5B;AACD,ADHK7E,gBAAQ,CAHM;ACOrB,ADHOC,CCHR,cDGe;AAJO,KAPE;ACgBxB,ADHIqB,ICGAyD,YAAY,ODHO,ECGnBA,SAAY,MAAO;AACrB,ADHMjF,cAAM,oBADS;AAEfoB,iBAAS,4CAFM;AAGfnB,eAAO,OAHQ;AAIfC,gBAAQ,CAJO;AAKfC,eAAO;AALQ,KAbC;ACuBtB,ADHEsB,MCGEyD,QAAQ,IAAIC,KAAJ,CAAUC,EDHE,CCGZ,CAAZ;ADFMpF,cAAM,kDADY;ACKxB,ADHME,SCGCgF,KAAP,EDHc,CAFU;ACMzB,ADHOjF,CCPR,cDOe,OAHW;AAIlBE,eAAO;ACIf,ADR0B,ICQtBkF,CD5BoB,SC4BV,EAAd;ADFI3D,0BAAsB;ACI1B,ADHQ1B,cAAM,0IADY;ACK1B,ADHQE,ICGJoF,UAAU,EDHE,CAFU,MCKtBA,OAAU,SAAU;AACtB,ADHMrF,MCGFsF,SDHS,OCGO,IAAIC,CDNA,YCMJ,CAAkBC,MAAlB,CAApB;ADFMtF,eAAO;ACIb,ADRwB,KA1BF;ACmCtBkF,ADHE1D,UCGML,SAAR,GAAoB,IDHI,QCGE;AACxB,ADHItB,YCGIuF,EDHE,YCGYxC,KAAtB,sHDJsB;ACKpB,ADHE7C,WCGG,KDHK,CAFU,ICKpB;AACE6C,ADHA9C,cCGM+C,CDHC,OAHW,ECMlB,GAAmBd,QAAQZ,SAA3B;AACA,ADHAnB,eAAO;ACIPqD,ADRkB,KAhCF,aCwCN,YAAM;AACd+B,ADHN3D,wBCGoB8D,GDHG,ECGjB;AACAf,ADHF3E,cAAM,SCGS,IAAb,+FDJiB;ACKlB,ADHDC,SCAA,MDAO,YAFY;ACMnBsD,ADHArD,aCGKyF,GDHG,CCGR,ADNmB;AAInBxF,eAAO;ACIP,ADRmB,KAtCH,UC8CT,KAAP;AACF,ADHF0B,WCGO,WAAL,GDHmB;ACIjB0D,ADHAvF,cAAM,QCGQ4F,IAAd,6JDJiB;ACKjBjB,ADHAzE,gBAAQ,CAFS,ICKJ,KAAb;ADFAD,eAAO,gBAHU;ACOjB,ADHAE,eCGO,ADHA,ICGP;AAfJ,ADQqB,KA5CD;ACqDrB,ADHC2B,GCfF,WDe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","file":"app.5439ac80.map","sourceRoot":"../src","sourcesContent":["/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.7\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos === curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing all strings\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor || !self.fadeOut) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","export const ROLES = {\n    seeking: '2',\n    employing: '1',\n    checking: '+'\n};\n\nexport const EMPLOYING_QUESTIONS = {\n    tech: {\n        text: 'Rank your need (by pressing a number from 1–9) for an individual with skills in TECHNOLOGY and PROGRAMMING',\n        input: /[1-9]/,\n        lights: .33,\n        store: true,\n    },\n    business: {\n        text: 'Rank your need (1–9) for an individual with skills in BUSINESS and MANAGEMENT',\n        input: /[1-9]/,\n        lights: .66,\n        store: true\n    },\n    design: {\n        text: 'Rank your need (1–9) for an individual with skills in DESIGN and ART',\n        input: /[1-9]/,\n        lights: 1,\n        store: true\n    }\n};\n\nexport const SEEKING_QUESTIONS = {\n    tech: {\n        text: 'Rank your skills (by pressing a number from 1–9) in TECHNOLOGY and PROGRAMMING',\n        input: /[1-9]/,\n        lights: .33,\n        store: true\n    },\n    business: {\n        text: 'Rank your skills (1–9) in BUSINESS and MANAGEMENT',\n        input: /[1-9]/,\n        lights: .66,\n        store: true\n    },\n    design: {\n        text: 'Rank your skills (1–9) in DESIGN and ART',\n        input: /[1-9]/,\n        lights: 1,\n        store: true\n    }\n};\n\nexport const INTEREST_QUESTIONS = {\n    politics: {\n        text: 'Rank your interest (1-9) in POLITICS and SOCIAL ISSUES',\n        input: /[1-9]/,\n        lights: 1.33,\n        store: true\n    },\n    finance: {\n        text: 'Rank your interest (1-9) in FINANCE and ENTREPRENEURSHIP',\n        input: /[1-9]/,\n        lights: 1.66,\n        store: true\n    },\n    arts: {\n        text: 'Rank your interest (1-9) in MUSEUMS and CONCERTS',\n        input: /[1-9]/,\n        lights: 2,\n        store: true\n    }\n};\n\nexport const PERSONALITY_QUESTIONS = {\n    city: {\n        text: 'Choose your favorite city: Press 1 for LONDON, 2 for NEW YORK, 3 for SAN FRANCISCO, 4 for TOKYO, 5 for SEATTLE, 6 for PARIS, 7 for LOS ANGELES, 8 for DUBAI, or 9 for MUMBAI',\n        input: /[1-9]/,\n        lights: 2.5,\n        store: true\n    },\n    animal: {\n        text: 'Press 1 if you are a DOG person, 2 if you are a CAT person, or 3 if you are INDIFFERENT',\n        input: /[1-3]/,\n        lights: 3,\n        store: true\n    }\n};\n\nexport const INTRODUCTION = {\n    role: {\n        text: 'Welcome to the Collaboration Station, press 1, 2, or type + followed by an ID to check messages or to leave a message',\n        // determine exceptable input from ROLES keys\n        input: new RegExp(`[${Object.values(ROLES).join('')}]`),\n        lights: 0,\n        store: true\n    },\n    employing: {\n        text: 'Let’s add your project and find the right people to work with you!',\n        subText: '(Press Enter to continue)',\n        input: /Enter/,\n        lights: 0,\n        store: false\n    },\n    seeking: {\n        text: 'Let’s find a project for you! First, please answer a few quick questions to help us find the best matches for you.',\n        subText: '(Press Enter to continue)',\n        input: /Enter/,\n        lights: 0,\n        store: false\n    },\n    checking: {\n        text: 'Please input your ID number and press Enter to continue! You can backspace with \"-\"!',\n        input: /[0-9(Enter)\\-]/,\n        lights: 0,\n        store: true\n    }\n};\n\nexport const CHECKING = {\n    makeInbox: {\n        text: 'Please pick up the phone to record! Press Enter to record your project description after the beep, press Enter again to finish your recording',\n        input: /Enter/,\n        lights: 3.5,\n        store: false\n    },\n    makeInboxConfirm: {\n        text: 'If you are happy with your project description, press Enter to confirm your recording, if not, press 0 to record again',\n        input: /[(Enter)0]/,\n        lights: 4,\n        store: false\n    },\n    checkingVoicemail: {\n        text: 'Checking voicemail',\n        subText: '(Press Enter to progress through messages)',\n        input: /Enter/,\n        lights: 0,\n        store: false\n    },\n    leavingMessageListen: {\n        text: 'Press Enter to begin playing project description',\n        lights: 0,\n        input: /Enter/,\n        store: false\n    },\n    leavingMessageChoice: {\n        text: 'Are you interested in this project? If so, press Enter to leave a message and phone number, if not, press 0 to return to the main screen',\n        lights: 0,\n        input: /[(Enter)0]/,\n        store: false\n    },\n    leavingMessageRecord: {\n        text: 'Please pick up the phone to record! Press Enter to begin recording your message after the beep, press Enter again to finish recording',\n        lights: 0,\n        input: /Enter/,\n        store: false\n    },\n    leavingMessageConfirm: {\n        text: 'If you are happy with your message, press Enter to confirm your recording, if not, press 0 to record again',\n        input: /[(Enter)0]/,\n        lights: 0,\n        store: false\n    },\n    leavingMessagePhone: {\n        text: 'Type in your phone number if you would like to provide contact information and press Enter when you are done, or press Enter to finish. You can press \"-\" to backspace!',\n        lights: 4,\n        input: /[0-9(Enter)\\-]/,\n        store: false\n    },\n    notFound: {\n        text: 'Nothing with that ID was found',\n        subText: '(Press Enter to return to the main screen)',\n        lights: 0,\n        input: /Enter/,\n        store: false\n    },\n    noMessages: {\n        text: 'No messages have been left for your project yet',\n        subText: '(Press Enter to return to the main screen)',\n        lights: 0,\n        input: /Enter/,\n        store: false\n    }\n};\n\nexport const CONCLUSION = {\n    seeking: {\n        text: 'Please pull the lever to receive your matches!',\n        input: /p/,\n        lights: 5,\n        store: false\n    },\n    employing: {\n        text: 'Please pull the lever to receive your ID!',\n        input: /p/,\n        lights: 5,\n        store: false\n    },\n    checking: {\n        text: 'Please pull the lever to receive contact information for those who left you messages!',\n        input: /p/,\n        lights: 5,\n        store: false\n    },\n    leavingMessage: {\n        text: 'Message and contact info received!',\n        subText: '(Press Enter to return to the main screen)',\n        input: /Enter/,\n        lights: 5,\n        store: false\n    }\n};\n","import Typed from 'typed.js';\nimport {\n  ROLES,\n  EMPLOYING_QUESTIONS,\n  SEEKING_QUESTIONS,\n  CHECKING,\n  CONCLUSION,\n  INTEREST_QUESTIONS,\n  PERSONALITY_QUESTIONS,\n  INTRODUCTION\n} from './stages.js';\n\n// constants\nconst ACTIONS = {\n  makeInbox: 'MAKE_INBOX',\n  checkInbox: 'CHECK_INBOX',\n  leaveMessageListen: 'LEAVE_MESSAGE_LISTEN',\n  leaveMessageRecord: 'LEAVE_MESSAGE_RECORD'\n};\n\n// useful elements\nconst EL = {\n  /*\n  makeInbox: document.querySelector('.make-inbox'),\n  checkInbox: document.querySelector('.check-inbox'),\n  leaveMessage: document.querySelector('.leave-message'),\n  id: document.querySelector('.numpad'),\n  recordings: document.querySelector('.recordings'),\n  */\n  out: document.querySelector('.out'),\n  outAlt: document.querySelector('.out-alt'),\n  lights: document.querySelector('.lights'),\n  recording: document.querySelector('.recording'),\n  playing: document.querySelector('.playing'),\n  bar: document.querySelector('.bar'),\n  barBackground: document.querySelector('.bar-background')\n};\n\n// state\nlet state = {\n  currAction: null,\n\n  // mapping of id -> inbox welcome audio URL\n  inboxes: {},\n\n  // mapping of id -> arr of inbox messages URLs and numbers\n  // {id: int, url: str}\n  messages: {},\n\n  // mapping of seeker project ids -> inbox ids\n  projectIDs: {},\n\n  // mapping of project ids -> phone numbers\n  phoneNumbers: {},\n\n  // current ID being accessed/used\n  currID: null,\n\n  // for re-recording\n  tempAudio: null\n};\n\n// misc. init\nconst beep = document.querySelector('.beep');\n\nlet beepEnded = (callback) => beep.addEventListener('ended', callback);\n\nlet chunks = [];\n//let log = str => EL.out.textContent = str;\n\nlet type = null;\nlet log = str => {\n  if (type && type.strings[0] == str) return;\n\n  if (type) {\n    type.destroy();\n  }\n\n  type = new Typed(EL.out, {\n    strings: [str],\n    typeSpeed: 20,\n    loop: false,\n    showCursor: false\n  });\n};\n\nlet logAlt = str => {\n  if (!str) str = '';\n  EL.outAlt.textContent = str;\n};\n\n/*\n// button lights for progress\nlet lights = count => {\n  if(count == undefined) return;\n  for (let i = 0; i < 5; i++) {\n    if (count > 0) {\n      EL.lights.children[i].classList.add('lit');\n    } else {\n      EL.lights.children[i].classList.remove('lit');\n    }\n    count--;\n  } \n};\n*/\n\n// progress bar\nlet lights = count => {\n  let percentage = count / 5 * 100;\n  if (percentage < 1) percentage = 1;\n  EL.bar.style.width = percentage + '%';\n  EL.barBackground.style.width = 100 - percentage + '%';\n};\n\nlet recordingLit = lit => {\n  if (lit) {\n    EL.recording.classList.add('blink');\n  } else {\n    EL.recording.classList.remove('blink');\n  }\n};\n\nlet playingLit = lit => {\n  if (lit) {\n    EL.playing.classList.add('lit');\n  } else {\n    EL.playing.classList.remove('lit');\n  }\n};\n\nlet makeAudio = src => {\n  /*\n  let audio = document.createElement('audio');\n  audio.setAttribute('controls', '');\n  audio.controls = true;\n  audio.src = src;\n  */\n  let audio = new Audio(src);\n\n  return audio;\n};\n\nlet audioFn = {};\n\n// setup media recorder\nlet success = stream => {\n  let mediaRecorder = new MediaRecorder(stream);\n\n  // make inbox, returns true if the call stopped the recording\n  audioFn.makeInbox = () => {\n    switch (mediaRecorder.state) {\n      case 'inactive':\n        state.currAction = ACTIONS.makeInbox;\n        //state.currID = state.nextID;\n        beepEnded(() => {\n          mediaRecorder.start();\n          recordingLit(true);\n        });\n        beep.play();\n\n        return false;\n      case 'recording':\n        mediaRecorder.stop();\n        recordingLit(false);\n\n        return true;\n    }\n  };\n\n  // check inbox\n  audioFn.checkInbox = (id, messageNum) => {\n    state.currAction = ACTIONS.checkInbox;\n    state.currID = id;\n\n    return makeAudio(state.messages[state.currID][messageNum]['url']);\n  };\n\n  // leave message\n  audioFn.leaveMessage = (projectID) => {\n    //state.currID = state.projectIDs[projectID];\n\n    if (state.currAction != ACTIONS.leaveMessageListen &&\n      state.currAction != ACTIONS.leaveMessageRecord) {\n      state.currAction = ACTIONS.leaveMessageListen;\n\n      return makeAudio(state.inboxes[state.projectIDs[projectID]]);\n    } else if (state.currAction == ACTIONS.leaveMessageListen) {\n      state.currAction = ACTIONS.leaveMessageRecord;\n      beepEnded(() => {\n        mediaRecorder.start();\n        recordingLit(true);\n      });\n      beep.play();\n\n      return false;\n    } else {\n      mediaRecorder.stop();\n      recordingLit(false);\n\n      return true;\n    }\n  };\n\n  mediaRecorder.onstop = e => {\n    // create audio blob and get URL reference\n    let blob = new Blob(chunks, {\n      'type': 'audio/ogg; codecs=opus'\n    });\n    chunks = [];\n    let audioSrc = window.URL.createObjectURL(blob);\n\n    switch (state.currAction) {\n      case ACTIONS.makeInbox:\n        state.tempAudio = audioSrc;\n        break;\n      case ACTIONS.leaveMessageRecord:\n        state.currAction = null;\n        state.tempAudio = audioSrc;\n        break;\n      default:\n        console.log(`Something went wrong, action ${state.currAction} shouldn't happen here`);\n        break;\n    }\n  };\n  mediaRecorder.ondataavailable = e => chunks.push(e.data);\n};\n\n// setup media devices\nnavigator.mediaDevices.getUserMedia({\n    audio: true\n  })\n  .then(success)\n  .catch(err => {\n    console.log(`The following getUserMedia error occured: ${err}`);\n  });\n\n/******************\n * Input handling *\n ******************/\n\n// reuse state from app.js\nstate.role = null;\nstate.currentStage = INTRODUCTION.role;\nstate.responses = null;\nstate.altOverride = false;\n\n// let log = str => document.querySelector('.out').textContent = str;\n\nlet handleInput = (keyName) => {\n\n  // ignore input if audio is playing\n  if (state.currAudio && !state.currAudio.ended) {\n    return;\n  }\n\n  // determine if we should do anything\n  if (keyName != null && !keyName.match(state.currentStage.input)) {\n    console.log(`${keyName} does not match ${state.currentStage.input}`);\n    return;\n  } else {\n    console.log(`Got ${keyName}`);\n  }\n\n  state.altOverride = false;\n  // check if there's currently a role in progress\n  if (state.role == null) {\n    state.role = keyName;\n    state.responses = {};\n    logAlt('');\n\n    // update stage\n    switch (state.role) {\n      case ROLES.seeking:\n        state.currentStage = INTRODUCTION.seeking;\n        break;\n      case ROLES.checking:\n        state.currentStage = INTRODUCTION.checking;\n        break;\n      case ROLES.employing:\n        state.currentStage = INTRODUCTION.employing;\n        break;\n    }\n  } else {\n    // do something based on current stage\n    switch (state.role) {\n      case ROLES.seeking:\n        handleSeeking(keyName);\n        break;\n      case ROLES.employing:\n        handleEmploying(keyName);\n        break;\n      case ROLES.checking:\n        handleChecking(keyName);\n        break;\n    }\n  }\n\n  log(state.currentStage.text);\n  if (!state.altOverride) logAlt(state.currentStage.subText);\n  lights(state.currentStage.lights);\n};\n\nlet handleSeeking = (keyName) => {\n  switch (state.currentStage) {\n    case INTRODUCTION.seeking:\n      state.currentStage = SEEKING_QUESTIONS.tech;\n      break;\n    case SEEKING_QUESTIONS.tech:\n      state.currentStage = SEEKING_QUESTIONS.business;\n      state.responses['tech'] = keyName;\n      break;\n    case SEEKING_QUESTIONS.business:\n      state.currentStage = SEEKING_QUESTIONS.design;\n      state.responses['business'] = keyName;\n      break;\n    case SEEKING_QUESTIONS.design:\n      state.currentStage = INTEREST_QUESTIONS.politics;\n      state.responses['design'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.politics:\n      state.currentStage = INTEREST_QUESTIONS.finance;\n      state.responses['politics'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.finance:\n      state.currentStage = INTEREST_QUESTIONS.arts;\n      state.responses['finance'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.arts:\n      state.currentStage = PERSONALITY_QUESTIONS.city;\n      state.responses['arts'] = keyName;\n      break;\n    case PERSONALITY_QUESTIONS.city:\n      state.currentStage = PERSONALITY_QUESTIONS.animal;\n      state.responses['city'] = keyName;\n      break;\n    case PERSONALITY_QUESTIONS.animal:\n      state.currentStage = CHECKING.leavingMessagePhone;\n      state.responses['animal'] = keyName;\n      break;\n    case CHECKING.leavingMessagePhone:\n      state.altOverride = true;\n      logAlt('');\n      if (keyName == 'Enter') {\n        state.currentStage = CONCLUSION.seeking;\n      } else if (keyName == '-') {\n        if (state.responses['phone'].length > 0) {\n          state.responses['phone'] = state.responses['phone'].slice(0, -1);\n        }\n        logAlt(state.responses['phone']);\n      } else {\n        if (!state.responses['phone']) {\n          state.responses['phone'] = keyName;\n        } else {\n          state.responses['phone'] += keyName;\n        }\n        console.log(state.responses['phone']);\n        logAlt(state.responses['phone']);\n      }\n      break;\n    case CONCLUSION.seeking:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n\n      // generate random IDs for matches\n      let matches = [];\n      let i = 0;\n      do {\n        matches[i] = Math.floor(Math.random() * 1000) + 1;\n        i++;\n      } while (\n        matches.reduce(\n          (prev, curr) => prev && Object.keys(state.projectIDs).includes(curr) &&\n          Object.keys(state.messages).includes(curr)\n        ) && i < 4\n      );\n\n      // return as many IDs as there are available projects\n      let retMatches = [];\n      let projectsOptions = Object.keys(state.inboxes);\n\n      let counter = projectsOptions.length;\n      // While there are elements in the array\n      while (counter > 0) {\n          // Pick a random index\n          let index = Math.floor(Math.random() * counter);\n  \n          // Decrease counter by 1\n          counter--;\n  \n          // And swap the last element with it\n          let temp = projectsOptions[counter];\n          projectsOptions[counter] = projectsOptions[index];\n          projectsOptions[index] = temp;\n      }\n  \n      for (i = 0; i < matches.length && i < projectsOptions.length; i++) {\n        // TODO: actually have a matching algorithm\n        state.projectIDs[matches[i]] = projectsOptions[i];\n        retMatches[i] = matches[i];\n\n        // associate phone with ID\n        state.phoneNumbers[matches[i]] = state.responses['phone'];\n      }\n\n      console.log(retMatches);\n      // TODO: find and print matches\n      state.altOverride = true;\n      if (retMatches.length > 0) {\n        logAlt(`Your matches are ${retMatches.join(', ')}`);\n      } else {\n        logAlt('No matches :(');\n      }\n      break;\n    default:\n      console.log('Can\\'t handle for state');\n      console.log(state.currentStage);\n  }\n};\n\nlet handleEmploying = (keyName) => {\n  switch (state.currentStage) {\n    case INTRODUCTION.employing:\n      state.currentStage = EMPLOYING_QUESTIONS.tech;\n      break;\n    case EMPLOYING_QUESTIONS.tech:\n      state.currentStage = EMPLOYING_QUESTIONS.business;\n      state.responses['tech'] = keyName;\n      break;\n    case EMPLOYING_QUESTIONS.business:\n      state.currentStage = EMPLOYING_QUESTIONS.design;\n      state.responses['business'] = keyName;\n      break;\n    case EMPLOYING_QUESTIONS.design:\n      state.currentStage = INTEREST_QUESTIONS.politics;\n      state.responses['design'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.politics:\n      state.currentStage = INTEREST_QUESTIONS.finance;\n      state.responses['politics'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.finance:\n      state.currentStage = INTEREST_QUESTIONS.arts;\n      state.responses['finance'] = keyName;\n      break;\n    case INTEREST_QUESTIONS.arts:\n      state.currentStage = PERSONALITY_QUESTIONS.city;\n      state.responses['arts'] = keyName;\n      break;\n    case PERSONALITY_QUESTIONS.city:\n      state.currentStage = PERSONALITY_QUESTIONS.animal;\n      state.responses['city'] = keyName;\n      break;\n    case PERSONALITY_QUESTIONS.animal:\n      state.currentStage = CHECKING.makeInbox;\n      state.responses['animal'] = keyName;\n      break;\n    case CHECKING.makeInbox:\n      if (audioFn.makeInbox()) {\n        state.currentStage = CHECKING.makeInboxConfirm; //CONCLUSION.employing;\n      }\n      break;\n    case CHECKING.makeInboxConfirm:\n      if (keyName == 'Enter') {\n        // generate next ID\n        let id;\n        let i = 0;\n        do {\n          id = Math.floor(Math.random() * 1000) + 1;\n          console.log(id);\n          i++;\n        } while (\n          Object.keys(state.projectIDs).includes(id) &&\n          Object.keys(state.messages).includes(id) && i < 10\n        );\n        state.currID = id;\n        state.currentStage = CONCLUSION.employing;\n        state.inboxes[state.currID] = state.tempAudio;\n        state.messages[state.currID] = [];\n        state.tempAudio = null;\n      } else {\n        state.currentStage = CHECKING.makeInbox;\n      }\n      break;\n    case CONCLUSION.employing:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n      // TODO: Print ID\n      state.altOverride = true;\n      console.log(`ID is ${state.currID}`);\n      logAlt(`Your ID number is ${state.currID}`);\n      break;\n    default:\n      console.log('Can\\'t handle for state');\n      console.log(state.currentStage);\n  }\n};\n\nlet handleChecking = (keyName) => {\n  switch (state.currentStage) {\n    case INTRODUCTION.checking:\n      state.altOverride = true;\n      logAlt('');\n      if (keyName == 'Enter') {\n        state.altOverride = false;\n        if (Object.keys(state.projectIDs).includes(state.responses['id'])) {\n          state.currentStage = CHECKING.leavingMessageListen;\n        } else if (Object.keys(state.messages).includes(state.responses['id'])) {\n          state.currentStage = CHECKING.checkingVoicemail;\n        } else {\n          state.currentStage = CHECKING.notFound;\n        }\n      } else if (keyName == '-') {\n        if (state.responses['id'].length > 0) {\n          state.responses['id'] = state.responses['id'].slice(0, -1);\n        }\n        logAlt(state.responses['id']);\n      } else {\n        if (!state.responses['id']) {\n          state.responses['id'] = keyName;\n        } else {\n          state.responses['id'] += keyName;\n        }\n        console.log(state.responses['id']);\n        logAlt(state.responses['id']);\n      }\n      break;\n    case CHECKING.notFound:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n      break;\n    case CHECKING.noMessages:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n      break;\n    case CHECKING.checkingVoicemail:\n      // check if there are any messages\n      let currMessages = state.messages[state.responses['id']];\n      if (currMessages.length == 0) {\n        state.currentStage = CHECKING.noMessages;\n        return;\n      }\n\n      // start incrementing through messages\n      if (state.responses['checked'] == undefined) {\n        state.responses['checked'] = 0;\n      } else {\n        state.responses['checked']++;\n      }\n\n      // play message if there is a next message\n      if (currMessages.length > state.responses['checked']) {\n        state.currAudio = audioFn.checkInbox(state.responses['id'],\n          state.responses['checked']);\n        state.currAudio.addEventListener('ended', () => {\n          playingLit(false);\n        });\n\n        state.currAudio.play();\n        playingLit(true);\n      } else {\n        state.currentStage = CONCLUSION.checking;\n      }\n      break;\n    case CONCLUSION.checking:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n      state.altOverride = true;\n      console.log(state.currID);\n      let phones = [];\n      for(let obj of state.messages[state.currID]) {\n        if(obj['id'] && obj['id'].length > 0) {\n          phones.push(obj['id']);\n        } else {\n          phones.push('N/A');\n        }\n      }\n      logAlt('Match contact information: ' + phones.join(', '));\n      break;\n    case CHECKING.leavingMessageListen:\n      state.currAudio = audioFn.leaveMessage(state.responses['id']);\n      state.currAudio.addEventListener('ended', () => {\n        state.currentStage = CHECKING.leavingMessageChoice;\n        playingLit(false);\n        handleInput(null);\n      });\n      state.currAudio.play();\n      playingLit(true);\n      break;\n    case CHECKING.leavingMessageChoice:\n      if (keyName == 'Enter') {\n        state.currentStage = CHECKING.leavingMessageRecord;\n      } else if (keyName == '0') {\n        state.currentStage = INTRODUCTION.role;\n        state.role = null;\n        state.currAction = null;\n      }\n      break;\n    case CHECKING.leavingMessageRecord:\n      if (audioFn.leaveMessage(state.responses['id'])) {\n        state.currentStage = CHECKING.leavingMessageConfirm; //CONCLUSION.leavingMessage;\n      }\n      break;\n    case CHECKING.leavingMessageConfirm:\n      if (keyName == 'Enter') {\n        state.currentStage = CONCLUSION.leavingMessage;\n        let message = {\n          url: state.tempAudio,\n          id: state.phoneNumbers[state.responses['id']]\n        };\n        state.messages[state.currID].push(message);\n        state.tempAudio = null;\n      } else {\n        state.currAction = ACTIONS.leaveMessageListen;\n        state.currentStage = CHECKING.leavingMessageRecord;\n      }\n      break;\n    case CONCLUSION.leavingMessage:\n      state.currentStage = INTRODUCTION.role;\n      state.role = null;\n      break;\n    default:\n      console.log('Can\\'t handle for state');\n      console.log(state.currentStage);\n  }\n};\n\n// numpad events\ndocument.addEventListener('keypress', (event) => {\n  const keyName = event.key;\n  handleInput(keyName);\n});\n\n// main\nlog(state.currentStage.text);\nlights(0.05);\nconsole.log(state);"]}